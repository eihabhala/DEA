version: '3.8'

services:
  # n8n with PostgreSQL database
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_EDITOR_BASE_URL=https://n8n.yourtrading.com
      - WEBHOOK_URL=https://n8n.yourtrading.com
      - GENERIC_TIMEZONE=UTC
      - N8N_SECURE_COOKIE=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - NODE_OPTIONS=--max-old-space-size=4096
      - N8N_PAYLOAD_SIZE_MAX=16
      # Database configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_password_change_me
      # DodoHook Integration
      - DODOHOOK_WEBHOOK_URL=https://webhook.dodohook.com/webhook/n8n
      - DODOHOOK_DOMAIN=webhook.dodohook.com
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/config:/config
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:5678/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - n8n_network

  # PostgreSQL database for n8n
  postgres:
    image: postgres:15-alpine
    container_name: n8n_postgres
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n_password_change_me
      - POSTGRES_NON_ROOT_USER=n8n
      - POSTGRES_NON_ROOT_PASSWORD=n8n_password_change_me
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - n8n_network

  # Nginx reverse proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: n8n_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - n8n
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - n8n_network

  # Certbot for Let's Encrypt SSL certificates
  certbot:
    image: certbot/certbot
    container_name: n8n_certbot
    volumes:
      - ./ssl/letsencrypt:/etc/letsencrypt
      - ./ssl/www:/var/www/certbot
    command: /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"
    restart: unless-stopped
    networks:
      - n8n_network

  # DodoHook Integration (optional - if running together)
  dodohook:
    build:
      context: ../Webhook_Server
      dockerfile: Dockerfile
    container_name: dodohook
    ports:
      - "8443:443"
    volumes:
      - ../Webhook_Server/tunnel_config.yaml:/app/tunnel_config.yaml:ro
      - ../Webhook_Server/certs:/app/certs:ro
      - dodohook_logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - DODOHOOK_N8N_URL=https://n8n.yourtrading.com
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:443/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - n8n_network

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  nginx_logs:
    driver: local
  dodohook_logs:
    driver: local

networks:
  n8n_network:
    driver: bridge