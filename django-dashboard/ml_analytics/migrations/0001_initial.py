# Generated by Django 4.2.7 on 2025-08-23 04:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('initial_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('current_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_pnl', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('max_drawdown', models.DecimalField(decimal_places=4, default=0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TradingSymbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('forex', 'Forex'), ('crypto', 'Cryptocurrency'), ('stocks', 'Stocks'), ('commodities', 'Commodities'), ('indices', 'Indices')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['symbol'],
            },
        ),
        migrations.CreateModel(
            name='TradingSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('tradingview', 'TradingView'), ('ml_model', 'ML Model'), ('technical_analysis', 'Technical Analysis'), ('fundamental_analysis', 'Fundamental Analysis'), ('dodohook', 'DodoHook'), ('n8n', 'n8n Workflow')], max_length=50)),
                ('signal_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('HOLD', 'Hold'), ('CLOSE', 'Close')], max_length=20)),
                ('entry_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('take_profit', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('confidence', models.DecimalField(decimal_places=4, max_digits=5)),
                ('risk_score', models.DecimalField(decimal_places=4, max_digits=5)),
                ('timeframe', models.CharField(max_length=10)),
                ('strategy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('is_executed', models.BooleanField(default=False)),
                ('execution_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('execution_time', models.DateTimeField(blank=True, null=True)),
                ('profit_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_analytics.tradingsymbol')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=20)),
                ('entry_price', models.DecimalField(decimal_places=6, max_digits=15)),
                ('exit_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('quantity', models.DecimalField(decimal_places=6, max_digits=15)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('take_profit', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('profit_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_open', models.BooleanField(default=True)),
                ('entry_time', models.DateTimeField()),
                ('exit_time', models.DateTimeField(blank=True, null=True)),
                ('strategy', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_analytics.portfolio')),
                ('signal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ml_analytics.tradingsignal')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_analytics.tradingsymbol')),
            ],
            options={
                'ordering': ['-entry_time'],
            },
        ),
        migrations.CreateModel(
            name='TechnicalIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_name', models.CharField(max_length=50)),
                ('timeframe', models.CharField(max_length=10)),
                ('value', models.JSONField()),
                ('parameters', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_analytics.tradingsymbol')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SentimentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('news', 'News Articles'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('telegram', 'Telegram'), ('discord', 'Discord')], max_length=50)),
                ('content', models.TextField()),
                ('sentiment_score', models.DecimalField(decimal_places=4, max_digits=5)),
                ('sentiment_label', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral')], max_length=20)),
                ('confidence', models.DecimalField(decimal_places=4, max_digits=5)),
                ('keywords', models.JSONField(default=list)),
                ('url', models.URLField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=200, null=True)),
                ('published_at', models.DateTimeField()),
                ('processed_at', models.DateTimeField(auto_now_add=True)),
                ('symbol', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ml_analytics.tradingsymbol')),
            ],
            options={
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='RiskMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('var_1d', models.DecimalField(decimal_places=6, max_digits=15)),
                ('var_5d', models.DecimalField(decimal_places=6, max_digits=15)),
                ('sharpe_ratio', models.DecimalField(decimal_places=4, max_digits=8)),
                ('sortino_ratio', models.DecimalField(decimal_places=4, max_digits=8)),
                ('max_drawdown', models.DecimalField(decimal_places=4, max_digits=5)),
                ('volatility', models.DecimalField(decimal_places=4, max_digits=8)),
                ('beta', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('alpha', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('correlation_spy', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('calculated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_analytics.portfolio')),
            ],
            options={
                'ordering': ['-calculated_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('model_version', models.CharField(max_length=50)),
                ('prediction_type', models.CharField(max_length=50)),
                ('accuracy', models.DecimalField(decimal_places=4, max_digits=5)),
                ('precision', models.DecimalField(decimal_places=4, max_digits=5)),
                ('recall', models.DecimalField(decimal_places=4, max_digits=5)),
                ('f1_score', models.DecimalField(decimal_places=4, max_digits=5)),
                ('mae', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('rmse', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('total_predictions', models.IntegerField()),
                ('correct_predictions', models.IntegerField()),
                ('evaluation_period_start', models.DateTimeField()),
                ('evaluation_period_end', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_analytics.tradingsymbol')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MLPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('model_version', models.CharField(max_length=50)),
                ('prediction_type', models.CharField(choices=[('price', 'Price Prediction'), ('direction', 'Direction Prediction'), ('volatility', 'Volatility Prediction'), ('support_resistance', 'Support/Resistance')], max_length=50)),
                ('predicted_value', models.JSONField()),
                ('confidence_score', models.DecimalField(decimal_places=4, max_digits=5)),
                ('prediction_horizon', models.CharField(max_length=20)),
                ('features_used', models.JSONField()),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_analytics.tradingsymbol')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MarketData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('open_price', models.DecimalField(decimal_places=6, max_digits=15)),
                ('high_price', models.DecimalField(decimal_places=6, max_digits=15)),
                ('low_price', models.DecimalField(decimal_places=6, max_digits=15)),
                ('close_price', models.DecimalField(decimal_places=6, max_digits=15)),
                ('volume', models.BigIntegerField(default=0)),
                ('spread', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ml_analytics.tradingsymbol')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['symbol', 'signal_type', 'created_at'], name='ml_analytic_symbol__85d120_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['source', 'created_at'], name='ml_analytic_source_a02df3_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['is_executed', 'created_at'], name='ml_analytic_is_exec_0c41f2_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['portfolio', 'symbol', 'entry_time'], name='ml_analytic_portfol_c6ffd7_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['is_open', 'entry_time'], name='ml_analytic_is_open_0c170a_idx'),
        ),
        migrations.AddIndex(
            model_name='technicalindicator',
            index=models.Index(fields=['symbol', 'indicator_name', 'timeframe', 'timestamp'], name='ml_analytic_symbol__57afe0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='technicalindicator',
            unique_together={('symbol', 'indicator_name', 'timeframe', 'timestamp')},
        ),
        migrations.AddIndex(
            model_name='sentimentdata',
            index=models.Index(fields=['symbol', 'source', 'published_at'], name='ml_analytic_symbol__a7a175_idx'),
        ),
        migrations.AddIndex(
            model_name='sentimentdata',
            index=models.Index(fields=['sentiment_label', 'published_at'], name='ml_analytic_sentime_5a58c9_idx'),
        ),
        migrations.AddIndex(
            model_name='riskmetrics',
            index=models.Index(fields=['portfolio', 'calculated_at'], name='ml_analytic_portfol_1c3de4_idx'),
        ),
        migrations.AddIndex(
            model_name='modelperformance',
            index=models.Index(fields=['model_name', 'symbol', 'created_at'], name='ml_analytic_model_n_125f20_idx'),
        ),
        migrations.AddIndex(
            model_name='mlprediction',
            index=models.Index(fields=['symbol', 'prediction_type', 'timestamp'], name='ml_analytic_symbol__35df1d_idx'),
        ),
        migrations.AddIndex(
            model_name='mlprediction',
            index=models.Index(fields=['model_name', 'timestamp'], name='ml_analytic_model_n_643fbf_idx'),
        ),
        migrations.AddIndex(
            model_name='marketdata',
            index=models.Index(fields=['symbol', 'timestamp'], name='ml_analytic_symbol__bd6939_idx'),
        ),
        migrations.AddIndex(
            model_name='marketdata',
            index=models.Index(fields=['timestamp'], name='ml_analytic_timesta_dbee2e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='marketdata',
            unique_together={('symbol', 'timestamp')},
        ),
    ]
